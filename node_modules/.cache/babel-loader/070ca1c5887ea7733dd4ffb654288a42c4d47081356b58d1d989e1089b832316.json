{"ast":null,"code":"var _jsxFileName = \"/Users/matt/info655-assignment2/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const songs = [{\n    title: 'A World So Full of Love',\n    artist: 'Shakey Graves',\n    year: 2019\n  }, {\n    title: 'The 30th',\n    artist: 'Billie Eilish',\n    year: 2022\n  }, {\n    title: 'August',\n    artist: 'Flipturn',\n    year: 2020\n  }];\n  const podcasts = [{\n    episode: 186,\n    episodeTitle: 'Stuff You Should Know: Boba Tea'\n  }, {\n    season: 4,\n    episode: 22,\n    episodeTitle: 'The Life And Works Of J.D. Salinger'\n  }, {\n    season: 3,\n    episode: 14,\n    episodeTitle: 'The Matewan Massacre'\n  }];\n  const [playlist, setPlaylist] = useState([...songs, ...podcasts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"playlistTitle2\",\n      children: \"Sad Rainy Day:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('test'),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"shuffle\",\n        src: shuffleButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), playlist.map((item, index) => {\n      if ('artist' in item) {\n        return /*#__PURE__*/_jsxDEV(Song, {\n          ...item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Podcast, {\n          ...item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 18\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"AlXwLpEvafEMc+Azk5AvWlmG2DA=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useEffect","useState","Song","Podcast","jsxDEV","_jsxDEV","Playlist","_s","songs","title","artist","year","podcasts","episode","episodeTitle","season","playlist","setPlaylist","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","console","log","src","shuffleButton","map","item","index","_c","$RefreshReg$"],"sources":["/Users/matt/info655-assignment2/src/Playlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\n\nconst Playlist = () => {\n\n  const songs = [\n    { title: 'A World So Full of Love', artist: 'Shakey Graves', year: 2019 },\n    { title: 'The 30th', artist: 'Billie Eilish', year: 2022 },\n    { title: 'August', artist: 'Flipturn', year: 2020 },\n  ];\n\n  const podcasts = [\n    { episode: 186, episodeTitle: 'Stuff You Should Know: Boba Tea' },\n    { season: 4, episode: 22, episodeTitle: 'The Life And Works Of J.D. Salinger' },\n    { season: 3, episode: 14, episodeTitle: 'The Matewan Massacre' },\n  ];\n  \n  const [playlist, setPlaylist] = useState([\n    ...songs, ...podcasts\n  ]);\n\n  return (\n    <div>\n      <h2 className=\"playlistTitle2\">Sad Rainy Day:</h2>\n      <button onClick={() => console.log('test')}>\n        <img className=\"shuffle\" src={shuffleButton} />\n      </button>\n      {playlist.map((item, index) => {\n        if ('artist' in item) {\n          return <Song key={index} {...item} />;\n        } else {\n          return <Podcast key={index} {...item} />;\n        }\n      })}\n    </div>\n  );\n};\n\nexport default Playlist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAMC,KAAK,GAAG,CACZ;IAAEC,KAAK,EAAE,yBAAyB;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAK,CAAC,EACzE;IAAEF,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC1D;IAAEF,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAK,CAAC,CACpD;EAED,MAAMC,QAAQ,GAAG,CACf;IAAEC,OAAO,EAAE,GAAG;IAAEC,YAAY,EAAE;EAAkC,CAAC,EACjE;IAAEC,MAAM,EAAE,CAAC;IAAEF,OAAO,EAAE,EAAE;IAAEC,YAAY,EAAE;EAAsC,CAAC,EAC/E;IAAEC,MAAM,EAAE,CAAC;IAAEF,OAAO,EAAE,EAAE;IAAEC,YAAY,EAAE;EAAuB,CAAC,CACjE;EAED,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CACvC,GAAGO,KAAK,EAAE,GAAGI,QAAQ,CACtB,CAAC;EAEF,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAIc,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDlB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAE;MAAAR,QAAA,eACzCb,OAAA;QAAKc,SAAS,EAAC,SAAS;QAACQ,GAAG,EAAEC;MAAc;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACRP,QAAQ,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC7B,IAAI,QAAQ,IAAID,IAAI,EAAE;QACpB,oBAAOzB,OAAA,CAACH,IAAI;UAAA,GAAiB4B;QAAI,GAAfC,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MACvC,CAAC,MAAM;QACL,oBAAOlB,OAAA,CAACF,OAAO;UAAA,GAAiB2B;QAAI,GAAfC,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAC1C;IACF,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAjCID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}