{"ast":null,"code":"var _jsxFileName = \"/Users/matt/info655-assignment2/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\nimport shuffleButton from '/Users/matt/info655-assignment2/src/shuffleButton.png';\nimport backButton from '/Users/matt/info655-assignment2/src/backButton.png';\nimport playButton from '/Users/matt/info655-assignment2/src/playButton.png';\nimport nextButton from '/Users/matt/info655-assignment2/src/nextButton.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const songs = [{\n    title: 'A World So Full of Love',\n    artist: 'Shakey Graves',\n    year: 2019\n  }, {\n    title: 'The 30th',\n    artist: 'Billie Eilish',\n    year: 2022\n  }, {\n    title: 'August',\n    artist: 'Flipturn',\n    year: 2020\n  }];\n  const podcasts = [{\n    episode: 186,\n    episodeTitle: 'Stuff You Should Know: Boba Tea'\n  }, {\n    season: 4,\n    episode: 22,\n    episodeTitle: 'The Life And Works Of J.D. Salinger'\n  }, {\n    season: 3,\n    episode: 14,\n    episodeTitle: 'The Matewan Massacre'\n  }];\n  const [playlist, setPlaylist] = useState([...songs, ...podcasts]);\n  const shufflePlaylist = () => {\n    let shuffledPlaylist = [...playlist];\n    shuffledPlaylist.sort(() => Math.random() - 0.5);\n    setPlaylist(shuffledPlaylist);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"playlistTitle2\",\n      children: \"Sad Rainy Day:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shufflePlaylist,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"shuffle\",\n        src: shuffleButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: previousSong,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"previous\",\n        src: previousButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextSong,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"next\",\n        src: nextButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), playlist.map((item, index) => {\n      if ('artist' in item) {\n        return /*#__PURE__*/_jsxDEV(Song, {\n          ...item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Podcast, {\n          ...item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"AlXwLpEvafEMc+Azk5AvWlmG2DA=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useEffect","useState","Song","Podcast","shuffleButton","backButton","playButton","nextButton","jsxDEV","_jsxDEV","Playlist","_s","songs","title","artist","year","podcasts","episode","episodeTitle","season","playlist","setPlaylist","shufflePlaylist","shuffledPlaylist","sort","Math","random","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","previousSong","previousButton","nextSong","map","item","index","_c","$RefreshReg$"],"sources":["/Users/matt/info655-assignment2/src/Playlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\nimport shuffleButton from '/Users/matt/info655-assignment2/src/shuffleButton.png';\nimport backButton from '/Users/matt/info655-assignment2/src/backButton.png';\nimport playButton from '/Users/matt/info655-assignment2/src/playButton.png';\nimport nextButton from '/Users/matt/info655-assignment2/src/nextButton.png';\n\nconst Playlist = () => {\n\n  const songs = [\n    { title: 'A World So Full of Love', artist: 'Shakey Graves', year: 2019 },\n    { title: 'The 30th', artist: 'Billie Eilish', year: 2022 },\n    { title: 'August', artist: 'Flipturn', year: 2020 },\n  ];\n\n  const podcasts = [\n    { episode: 186, episodeTitle: 'Stuff You Should Know: Boba Tea' },\n    { season: 4, episode: 22, episodeTitle: 'The Life And Works Of J.D. Salinger' },\n    { season: 3, episode: 14, episodeTitle: 'The Matewan Massacre' },\n  ];\n  \n  const [playlist, setPlaylist] = useState([\n    ...songs, ...podcasts\n  ]);\n\n  const shufflePlaylist = () => {\n    let shuffledPlaylist = [...playlist];\n    shuffledPlaylist.sort(() => Math.random() - 0.5);\n  setPlaylist(shuffledPlaylist);\n};\n\n  return (\n    <div>\n      <h2 className=\"playlistTitle2\">Sad Rainy Day:</h2>\n      <button onClick={shufflePlaylist}>\n        <img className=\"shuffle\" src={shuffleButton} />\n      </button>\n      <button onClick={previousSong}>\n        <img className=\"previous\" src={previousButton} />\n      </button>\n      <button onClick={nextSong}>\n        <img className=\"next\" src={nextButton} />\n      </button>\n      {playlist.map((item, index) => {\n        if ('artist' in item) {\n          return <Song key={index} {...item} />;\n        } else {\n          return <Podcast key={index} {...item} />;\n        }\n      })}\n    </div>\n  );\n};\n\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}