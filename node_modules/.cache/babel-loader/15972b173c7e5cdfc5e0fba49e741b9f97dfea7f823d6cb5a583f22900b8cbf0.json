{"ast":null,"code":"var _jsxFileName = \"/Users/matt/info655-assignment2/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const songs = [{\n    title: 'Song 1',\n    artist: 'Artist 1',\n    year: 2021\n  }, {\n    title: 'Song 2',\n    artist: 'Artist 2',\n    year: 2022\n  }, {\n    title: 'Song 3',\n    artist: 'Artist 3',\n    year: 2023\n  }];\n  const podcasts = [{\n    season: 1,\n    episode: 1,\n    episodeTitle: 'Episode 1'\n  }, {\n    season: 1,\n    episode: 2,\n    episodeTitle: 'Episode 2'\n  }, {\n    season: 2,\n    episode: 1,\n    episodeTitle: 'Episode 1'\n  }];\n  useEffect(() => {\n    const shuffledPlaylist = [...songs, ...podcasts].sort(() => Math.random() - 0.5);\n    setPlaylist(shuffledPlaylist);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Playlist:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), playlist.map((item, index) => {\n      if ('artist' in item) {\n        return /*#__PURE__*/_jsxDEV(Song, {\n          ...item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Podcast, {\n          ...item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"SfGHzpmtpLKztV2lxKmaYynPFKI=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useEffect","useState","Song","Podcast","jsxDEV","_jsxDEV","Playlist","_s","playlist","setPlaylist","songs","title","artist","year","podcasts","season","episode","episodeTitle","shuffledPlaylist","sort","Math","random","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","_c","$RefreshReg$"],"sources":["/Users/matt/info655-assignment2/src/Playlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\n\nconst Playlist = () => {\n  const [playlist, setPlaylist] = useState([]);\n\n  const songs = [\n    { title: 'Song 1', artist: 'Artist 1', year: 2021 },\n    { title: 'Song 2', artist: 'Artist 2', year: 2022 },\n    { title: 'Song 3', artist: 'Artist 3', year: 2023 },\n  ];\n\n  const podcasts = [\n    { season: 1, episode: 1, episodeTitle: 'Episode 1' },\n    { season: 1, episode: 2, episodeTitle: 'Episode 2' },\n    { season: 2, episode: 1, episodeTitle: 'Episode 1' },\n  ];\n\n  useEffect(() => {\n    const shuffledPlaylist = [...songs, ...podcasts].sort(() => Math.random() - 0.5);\n    setPlaylist(shuffledPlaylist);\n  }, []);\n\n  return (\n    <div>\n      <h2>Playlist:</h2>\n      {playlist.map((item, index) => {\n        if ('artist' in item) {\n          return <Song key={index} {...item} />;\n        } else {\n          return <Podcast key={index} {...item} />;\n        }\n      })}\n    </div>\n  );\n};\n\nexport default Playlist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,KAAK,GAAG,CACZ;IAAEC,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAK,CAAC,EACnD;IAAEF,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAK,CAAC,EACnD;IAAEF,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAK,CAAC,CACpD;EAED,MAAMC,QAAQ,GAAG,CACf;IAAEC,MAAM,EAAE,CAAC;IAAEC,OAAO,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAY,CAAC,EACpD;IAAEF,MAAM,EAAE,CAAC;IAAEC,OAAO,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAY,CAAC,EACpD;IAAEF,MAAM,EAAE,CAAC;IAAEC,OAAO,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAY,CAAC,CACrD;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAMkB,gBAAgB,GAAG,CAAC,GAAGR,KAAK,EAAE,GAAGI,QAAQ,CAAC,CAACK,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAChFZ,WAAW,CAACS,gBAAgB,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBlB,QAAQ,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC7B,IAAI,QAAQ,IAAID,IAAI,EAAE;QACpB,oBAAOvB,OAAA,CAACH,IAAI;UAAA,GAAiB0B;QAAI,GAAfC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MACvC,CAAC,MAAM;QACL,oBAAOrB,OAAA,CAACF,OAAO;UAAA,GAAiByB;QAAI,GAAfC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAC1C;IACF,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAhCID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}