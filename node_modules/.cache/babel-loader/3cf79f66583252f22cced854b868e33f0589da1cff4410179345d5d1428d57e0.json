{"ast":null,"code":"import React,{useEffect,useState}from'react';import Song from'./Song';import Podcast from'./Podcast';import'./App.css';import ShuffleButton from'./ShuffleButton.js';import BackButton from'./BackButton.js';import PlayButton from'./PlayButton.js';import NextButton from'./NextButton.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Playlist=()=>{const[playlist,setPlaylist]=useState([]);const getSongs=()=>{const xhr=new XMLHttpRequest();xhr.open(\"GET\",\"https://raw.githubusercontent.com/Gisin3872/Info655-Submission/main/src/audio_tracks.json\");xhr.send();xhr.responseType=\"json\";xhr.onload=()=>{if(xhr.readyState==4&&xhr.status==200){const data=xhr.response;setPlaylist(data.tracks);}else{console.log(\"Error: \".concat(xhr.status));}};};useEffect(getSongs,[]);const shufflePlaylist=()=>{let shuffledPlaylist=[...playlist];shuffledPlaylist.sort(()=>Math.random()-0.5);setPlaylist(shuffledPlaylist);};const[isPlaying,setIsPlaying]=useState(false);const[nowPlaying,setNowPlaying]=useState('');const[nowPlayingIndex,setNowPlayingIndex]=useState(0);const playPauseSong=()=>{if(isPlaying){setNowPlaying('Paused');setIsPlaying(false);}else{const playingTitle='title'in playlist[nowPlayingIndex]?playlist[nowPlayingIndex].title:playlist[nowPlayingIndex].episodeTitle;setNowPlaying(\"Playing: \".concat(playingTitle));setIsPlaying(true);}};const handleDoubleClick=(title,episodeTitle,index)=>{setNowPlayingIndex(index);if(title){setNowPlaying(\"Playing: \".concat(title));}else if(episodeTitle){setNowPlaying(\"Playing: \".concat(episodeTitle));}};const nextSong=()=>{let nextIndex=nowPlayingIndex+1;if(nextIndex>=playlist.length){nextIndex=0;}setNowPlayingIndex(nextIndex);const nextTrack=playlist[nextIndex];const playingTitle='title'in nextTrack?nextTrack.title:nextTrack.episodeTitle;setNowPlaying(\"Playing: \".concat(playingTitle));};const backSong=()=>{let prevIndex=nowPlayingIndex-1;if(prevIndex<0){prevIndex=playlist.length-1;}setNowPlayingIndex(prevIndex);const previousTrack=playlist[prevIndex];const playingTitle='title'in previousTrack?previousTrack.title:previousTrack.episodeTitle;setNowPlaying(\"Playing: \".concat(playingTitle));};const ShuffleButton=_ref=>{let{action}=_ref;return/*#__PURE__*/_jsx(\"button\",{onClick:action,children:\"Shuffle\"});};const BackButton=_ref2=>{let{action}=_ref2;return/*#__PURE__*/_jsx(\"button\",{onClick:action,children:\"Back\"});};const PlayButton=_ref3=>{let{action}=_ref3;return/*#__PURE__*/_jsx(\"button\",{onClick:action,children:\"Play/Pause\"});};const NextButton=_ref4=>{let{action}=_ref4;return/*#__PURE__*/_jsx(\"button\",{onClick:action,children:\"Next\"});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toolbar\",children:[/*#__PURE__*/_jsx(ShuffleButton,{action:shufflePlaylist}),/*#__PURE__*/_jsx(BackButton,{action:backSong}),/*#__PURE__*/_jsx(PlayButton,{action:playPauseSong}),/*#__PURE__*/_jsx(NextButton,{action:nextSong})]}),/*#__PURE__*/_jsx(\"div\",{className:\"status\",children:nowPlaying}),playlist.map((item,index)=>{if('artist'in item){return/*#__PURE__*/_jsx(Song,{...item,onDoubleClick:()=>handleDoubleClick(item.title,null,index)},index);}else{return/*#__PURE__*/_jsx(Podcast,{...item,onDoubleClick:()=>handleDoubleClick(null,item.episodeTitle,index)},index);}})]});};export default Playlist;","map":{"version":3,"names":["React","useEffect","useState","Song","Podcast","ShuffleButton","BackButton","PlayButton","NextButton","jsx","_jsx","jsxs","_jsxs","Playlist","playlist","setPlaylist","getSongs","xhr","XMLHttpRequest","open","send","responseType","onload","readyState","status","data","response","tracks","console","log","concat","shufflePlaylist","shuffledPlaylist","sort","Math","random","isPlaying","setIsPlaying","nowPlaying","setNowPlaying","nowPlayingIndex","setNowPlayingIndex","playPauseSong","playingTitle","title","episodeTitle","handleDoubleClick","index","nextSong","nextIndex","length","nextTrack","backSong","prevIndex","previousTrack","_ref","action","onClick","children","_ref2","_ref3","_ref4","className","map","item","onDoubleClick"],"sources":["/Users/matt/Info655-Submission/src/Playlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\nimport ShuffleButton from './ShuffleButton.js';\nimport BackButton from './BackButton.js';\nimport PlayButton from './PlayButton.js';\nimport NextButton from './NextButton.js';\n\nconst Playlist = () => {\n  \n  const [playlist, setPlaylist] = useState([]);\n\n  const getSongs = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"https://raw.githubusercontent.com/Gisin3872/Info655-Submission/main/src/audio_tracks.json\");\n    xhr.send();\n    xhr.responseType = \"json\";\n    xhr.onload = () => {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        const data = xhr.response;\n        setPlaylist(data.tracks);\n      } else {\n        console.log(`Error: ${xhr.status}`);\n      }\n    };\n  };\n\n  useEffect (getSongs, []);\n\n  const shufflePlaylist = () => {\n    let shuffledPlaylist = [...playlist];\n    shuffledPlaylist.sort(() => Math.random() - 0.5);\n  setPlaylist(shuffledPlaylist);\n  };\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [nowPlaying, setNowPlaying] = useState('');\n  const [nowPlayingIndex, setNowPlayingIndex] = useState(0);\n\n  const playPauseSong = () => {\n    if (isPlaying) {\n      setNowPlaying('Paused');\n      setIsPlaying(false);\n    } else {\n      const playingTitle = 'title' in playlist[nowPlayingIndex] ? playlist[nowPlayingIndex].title : playlist[nowPlayingIndex].episodeTitle;\n      setNowPlaying(`Playing: ${playingTitle}`);\n      setIsPlaying(true);\n    }\n  };\n\nconst handleDoubleClick = (title, episodeTitle, index) => {\n  setNowPlayingIndex(index);\n  if (title) {\n    setNowPlaying(`Playing: ${title}`);\n  } else if (episodeTitle) {\n    setNowPlaying(`Playing: ${episodeTitle}`);\n  }\n};\n\nconst nextSong = () => {\n  let nextIndex = nowPlayingIndex + 1;\n  if (nextIndex >= playlist.length) {\n    nextIndex = 0;\n  }\n  setNowPlayingIndex(nextIndex);\n  const nextTrack = playlist[nextIndex];\n  const playingTitle = 'title' in nextTrack ? nextTrack.title : nextTrack.episodeTitle;\n  setNowPlaying(`Playing: ${playingTitle}`);\n};\n\nconst backSong = () => {\n  let prevIndex = nowPlayingIndex - 1;\n  if (prevIndex < 0) {\n    prevIndex = playlist.length - 1;\n  }\n  setNowPlayingIndex(prevIndex);\n  const previousTrack = playlist[prevIndex];\n  const playingTitle = 'title' in previousTrack ? previousTrack.title : previousTrack.episodeTitle;\n  setNowPlaying(`Playing: ${playingTitle}`);\n};\n  \nconst ShuffleButton = ({ action }) => {\n  return <button onClick={action}>Shuffle</button>;\n};\nconst BackButton = ({ action }) => {\n  return <button onClick={action}>Back</button>;\n};\nconst PlayButton = ({ action }) => {\n  return <button onClick={action}>Play/Pause</button>;\n};\n\nconst NextButton = ({ action }) => {\n  return <button onClick={action}>Next</button>;\n};\n\n   return (\n    <div>\n    <div className=\"toolbar\">\n    <ShuffleButton action={shufflePlaylist} />\n    <BackButton action={backSong} />\n    <PlayButton action={playPauseSong} />\n    <NextButton action={nextSong} />\n    </div>\n\n    <div className=\"status\">\n      {nowPlaying}\n    </div>\n  \n    {playlist.map((item, index) => {\n      if ('artist' in item) {\n        return <Song key={index} {...item} onDoubleClick={() => handleDoubleClick(item.title, null, index)} />;\n      } else {\n        return <Podcast key={index} {...item} onDoubleClick={() => handleDoubleClick(null, item.episodeTitle, index)} />;\n      }\n    })}\n\n      </div>\n    );\n  };\n\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}