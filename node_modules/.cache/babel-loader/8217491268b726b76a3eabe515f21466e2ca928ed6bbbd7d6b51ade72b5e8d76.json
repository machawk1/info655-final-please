{"ast":null,"code":"var _jsxFileName = \"/Users/matt/info655-assignment2/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\nimport ShuffleButton from './ShuffleButton.js';\nimport BackButton from './BackButton.js';\nimport PlayButton from './PlayButton.js';\nimport NextButton from './NextButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const getSongs = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"http://localhost:3001/tracks\");\n    xhr.send();\n    xhr.responseType = \"json\";\n    xhr.onload = () => {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        const data = xhr.response;\n        setPlaylist(data);\n      } else {\n        console.log(`Error: ${xhr.status}`);\n      }\n    };\n  };\n  useEffect(getSongs, []);\n  const shufflePlaylist = () => {\n    let shuffledPlaylist = [...playlist];\n    shuffledPlaylist.sort(() => Math.random() - 0.5);\n    setPlaylist(shuffledPlaylist);\n  };\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [nowPlaying, setNowPlaying] = useState('');\n  const [nowPlayingIndex, setNowPlayingIndex] = useState(0);\n  const playPauseSong = () => {\n    if (isPlaying) {\n      setNowPlaying('Paused');\n      setIsPlaying(false);\n    } else {\n      const playingTitle = 'title' in playlist[nowPlayingIndex] ? playlist[nowPlayingIndex].title : playlist[nowPlayingIndex].episodeTitle;\n      setNowPlaying(`Playing: ${playingTitle}`);\n      setIsPlaying(true);\n    }\n  };\n  const handleDoubleClick = (title, episodeTitle, index) => {\n    setNowPlayingIndex(index);\n    if (title) {\n      setNowPlaying(`Playing: ${title}`);\n    } else if (episodeTitle) {\n      setNowPlaying(`Playing: ${episodeTitle}`);\n    }\n  };\n  const nextSong = () => {\n    let nextIndex = nowPlayingIndex + 1;\n    if (nextIndex >= playlist.length) {\n      nextIndex = 0;\n    }\n    setNowPlayingIndex(nextIndex);\n    const nextTrack = playlist[nextIndex];\n    const playingTitle = 'title' in nextTrack ? nextTrack.title : nextTrack.episodeTitle;\n    setNowPlaying(`Playing: ${playingTitle}`);\n  };\n  const backSong = () => {\n    let prevIndex = nowPlayingIndex - 1;\n    if (prevIndex < 0) {\n      prevIndex = playlist.length - 1;\n    }\n    setNowPlayingIndex(prevIndex);\n    const previousTrack = playlist[prevIndex];\n    const playingTitle = 'title' in previousTrack ? previousTrack.title : previousTrack.episodeTitle;\n    setNowPlaying(`Playing: ${playingTitle}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(ShuffleButton, {\n        action: shufflePlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(BackButton, {\n        action: backSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n        action: playPauseSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NextSong, {\n        action: nextSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: nowPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), playlist.map((item, index) => {\n      if ('artist' in item) {\n        return /*#__PURE__*/_jsxDEV(Song, {\n          ...item,\n          onDoubleClick: () => handleDoubleClick(item.title, null, index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Podcast, {\n          ...item,\n          onDoubleClick: () => handleDoubleClick(null, item.episodeTitle, index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"0TkrtbmjlyVTJWHco0O46v0U+04=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useEffect","useState","Song","Podcast","ShuffleButton","BackButton","PlayButton","NextButton","jsxDEV","_jsxDEV","Playlist","_s","playlist","setPlaylist","getSongs","xhr","XMLHttpRequest","open","send","responseType","onload","readyState","status","data","response","console","log","shufflePlaylist","shuffledPlaylist","sort","Math","random","isPlaying","setIsPlaying","nowPlaying","setNowPlaying","nowPlayingIndex","setNowPlayingIndex","playPauseSong","playingTitle","title","episodeTitle","handleDoubleClick","index","nextSong","nextIndex","length","nextTrack","backSong","prevIndex","previousTrack","children","className","action","fileName","_jsxFileName","lineNumber","columnNumber","NextSong","map","item","onDoubleClick","_c","$RefreshReg$"],"sources":["/Users/matt/info655-assignment2/src/Playlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\nimport ShuffleButton from './ShuffleButton.js';\nimport BackButton from './BackButton.js';\nimport PlayButton from './PlayButton.js';\nimport NextButton from './NextButton.js';\n\nconst Playlist = () => {\n  \n  const [playlist, setPlaylist] = useState([]);\n\n  const getSongs = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"http://localhost:3001/tracks\");\n    xhr.send();\n    xhr.responseType = \"json\";\n    xhr.onload = () => {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        const data = xhr.response;\n        setPlaylist(data);\n      } else {\n        console.log(`Error: ${xhr.status}`);\n      }\n    };\n  };\n\n  useEffect (getSongs, []);\n\n  const shufflePlaylist = () => {\n    let shuffledPlaylist = [...playlist];\n    shuffledPlaylist.sort(() => Math.random() - 0.5);\n  setPlaylist(shuffledPlaylist);\n  };\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [nowPlaying, setNowPlaying] = useState('');\n  const [nowPlayingIndex, setNowPlayingIndex] = useState(0);\n\n  const playPauseSong = () => {\n    if (isPlaying) {\n      setNowPlaying('Paused');\n      setIsPlaying(false);\n    } else {\n      const playingTitle = 'title' in playlist[nowPlayingIndex] ? playlist[nowPlayingIndex].title : playlist[nowPlayingIndex].episodeTitle;\n      setNowPlaying(`Playing: ${playingTitle}`);\n      setIsPlaying(true);\n    }\n  };\n\nconst handleDoubleClick = (title, episodeTitle, index) => {\n  setNowPlayingIndex(index);\n  if (title) {\n    setNowPlaying(`Playing: ${title}`);\n  } else if (episodeTitle) {\n    setNowPlaying(`Playing: ${episodeTitle}`);\n  }\n};\n\nconst nextSong = () => {\n  let nextIndex = nowPlayingIndex + 1;\n  if (nextIndex >= playlist.length) {\n    nextIndex = 0;\n  }\n  setNowPlayingIndex(nextIndex);\n  const nextTrack = playlist[nextIndex];\n  const playingTitle = 'title' in nextTrack ? nextTrack.title : nextTrack.episodeTitle;\n  setNowPlaying(`Playing: ${playingTitle}`);\n};\n\nconst backSong = () => {\n  let prevIndex = nowPlayingIndex - 1;\n  if (prevIndex < 0) {\n    prevIndex = playlist.length - 1;\n  }\n  setNowPlayingIndex(prevIndex);\n  const previousTrack = playlist[prevIndex];\n  const playingTitle = 'title' in previousTrack ? previousTrack.title : previousTrack.episodeTitle;\n  setNowPlaying(`Playing: ${playingTitle}`);\n};\n  \n   return (\n    <div>\n    <div className=\"toolbar\">\n    <ShuffleButton action={shufflePlaylist} />\n    <BackButton action={backSong} />\n    <PlayButton action={playPauseSong} />\n    <NextSong action={nextSong} />\n    </div>\n\n    <div className=\"status\">\n      {nowPlaying}\n    </div>\n  \n    {playlist.map((item, index) => {\n      if ('artist' in item) {\n        return <Song key={index} {...item} onDoubleClick={() => handleDoubleClick(item.title, null, index)} />;\n      } else {\n        return <Podcast key={index} {...item} onDoubleClick={() => handleDoubleClick(null, item.episodeTitle, index)} />;\n      }\n    })}\n\n      </div>\n    );\n  };\n\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}