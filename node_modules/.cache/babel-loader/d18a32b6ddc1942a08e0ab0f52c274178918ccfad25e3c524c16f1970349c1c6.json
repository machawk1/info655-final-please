{"ast":null,"code":"var _jsxFileName = \"/Users/matt/info655-assignment2/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\nimport shuffleButton from '/Users/matt/info655-assignment2/src/shuffleButton.png';\nimport previousButton from '/Users/matt/info655-assignment2/src/backButton.png';\nimport playButton from '/Users/matt/info655-assignment2/src/playButton.png';\nimport nextButton from '/Users/matt/info655-assignment2/src/nextButton.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const getSongs = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"http://localhost:3001/tracks\");\n    xhr.send();\n    xhr.responseType = \"json\";\n    xhr.onload = () => {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        const data = xhr.response;\n        setPlaylist(data);\n      } else {\n        console.log(`Error: ${xhr.status}`);\n      }\n    };\n  };\n  useEffect(getSongs, []);\n  const shufflePlaylist = () => {\n    let shuffledPlaylist = [...playlist];\n    shuffledPlaylist.sort(() => Math.random() - 0.5);\n    setPlaylist(shuffledPlaylist);\n  };\n  const previousSong = () => {};\n  const nextSong = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"playlistTitle2\",\n      children: \"Sad Rainy Day:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shufflePlaylist,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"shuffle\",\n          src: shuffleButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previousSong,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"previous\",\n          src: previousButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextSong,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"next\",\n          src: nextButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), playlist.map((item, index) => {\n      if ('artist' in item) {\n        return /*#__PURE__*/_jsxDEV(Song, {\n          ...item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Podcast, {\n          ...item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 18\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"SfGHzpmtpLKztV2lxKmaYynPFKI=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useEffect","useState","Song","Podcast","shuffleButton","previousButton","playButton","nextButton","jsxDEV","_jsxDEV","Playlist","_s","playlist","setPlaylist","getSongs","xhr","XMLHttpRequest","open","send","responseType","onload","readyState","status","data","response","console","log","shufflePlaylist","shuffledPlaylist","sort","Math","random","previousSong","nextSong","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","map","item","index","_c","$RefreshReg$"],"sources":["/Users/matt/info655-assignment2/src/Playlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\nimport shuffleButton from '/Users/matt/info655-assignment2/src/shuffleButton.png';\nimport previousButton from '/Users/matt/info655-assignment2/src/backButton.png';\nimport playButton from '/Users/matt/info655-assignment2/src/playButton.png';\nimport nextButton from '/Users/matt/info655-assignment2/src/nextButton.png';\n\nconst Playlist = () => {\n  \n  const [playlist, setPlaylist] = useState([]);\n\n  const getSongs = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"http://localhost:3001/tracks\");\n    xhr.send();\n    xhr.responseType = \"json\";\n    xhr.onload = () => {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        const data = xhr.response;\n        setPlaylist(data);\n      } else {\n        console.log(`Error: ${xhr.status}`);\n      }\n    };\n  };\n\n  useEffect (getSongs, []);\n\n  const shufflePlaylist = () => {\n    let shuffledPlaylist = [...playlist];\n    shuffledPlaylist.sort(() => Math.random() - 0.5);\n  setPlaylist(shuffledPlaylist);\n  };\n\n  const previousSong = () => {\n  }\n\n  const nextSong = () => {\n  }\n\n  return (\n    <div>\n      <h2 className=\"playlistTitle2\">Sad Rainy Day:</h2>\n\n      <div className=\"toolbar\">\n        <button onClick={shufflePlaylist}>\n          <img className=\"shuffle\" src={shuffleButton} />\n        </button>\n\n        <button onClick={previousSong}>\n          <img className=\"previous\" src={previousButton} />\n        </button>\n\n        <button onClick={nextSong}>\n          <img className=\"next\" src={nextButton} />\n        </button>\n      </div>\n\n      {playlist.map((item, index) => {\n        if ('artist' in item) {\n          return <Song key={index} {...item} />;\n        } else {\n          return <Podcast key={index} {...item} />;\n        }\n      })}\n    </div>\n  );\n};\n\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}