{"ast":null,"code":"var _jsxFileName = \"/Users/matt/info655-assignment2/src/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\nimport shuffleButton from '/Users/matt/info655-assignment2/src/shuffleButton.png';\nimport backButton from '/Users/matt/info655-assignment2/src/backButton.png';\nimport playButton from '/Users/matt/info655-assignment2/src/playButton.png';\nimport forwardButton from '/Users/matt/info655-assignment2/src/nextButton.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const getSongs = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"http://localhost:3001/tracks\");\n    xhr.send();\n    xhr.responseType = \"json\";\n    xhr.onload = () => {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        const data = xhr.response;\n        setPlaylist(data);\n      } else {\n        console.log(`Error: ${xhr.status}`);\n      }\n    };\n  };\n  useEffect(getSongs, []);\n  const shufflePlaylist = () => {\n    let shuffledPlaylist = [...playlist];\n    shuffledPlaylist.sort(() => Math.random() - 0.5);\n    setPlaylist(shuffledPlaylist);\n  };\n  let nowPlayingIndex = 0;\n  const [nowPlaying, setNowPlaying] = useState('');\n  const handleDoubleClick = (title, episodeTitle) => {\n    if (title) {\n      setNowPlaying(`Now Playing: ${title}`);\n    } else if (episodeTitle) {\n      setNowPlaying(`Now Playing: ${episodeTitle}`);\n    }\n  };\n  const nextSong = () => {\n    if (nowPlayingIndex < playlist.length - 1) {\n      nowPlayingIndex += 1;\n      setNowPlaying(`Now Playing: ${playlist[nowPlayingIndex].title}`);\n    }\n  };\n  const backSong = () => {\n    if (nowPlayingIndex > 0) {\n      nowPlayingIndex -= 1;\n      setNowPlaying(`Now Playing: ${playlist[nowPlayingIndex].title}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shufflePlaylist,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"shuffle\",\n          src: shuffleButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backSong,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"previous\",\n          src: backButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"play\",\n          src: playButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextSong,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"next\",\n          src: forwardButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: nowPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), playlist.map((item, index) => {\n      if ('artist' in item) {\n        return /*#__PURE__*/_jsxDEV(Song, {\n          ...item,\n          onDoubleClick: () => handleDoubleClick(item.title, null)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 12\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Podcast, {\n          ...item,\n          onDoubleClick: () => handleDoubleClick(null, item.episodeTitle)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 12\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n};\n_s(Playlist, \"kFcMzHv561f/saV0PBvR6z25FcU=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useEffect","useState","Song","Podcast","shuffleButton","backButton","playButton","forwardButton","jsxDEV","_jsxDEV","Playlist","_s","playlist","setPlaylist","getSongs","xhr","XMLHttpRequest","open","send","responseType","onload","readyState","status","data","response","console","log","shufflePlaylist","shuffledPlaylist","sort","Math","random","nowPlayingIndex","nowPlaying","setNowPlaying","handleDoubleClick","title","episodeTitle","nextSong","length","backSong","children","className","onClick","src","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onDoubleClick","_c","$RefreshReg$"],"sources":["/Users/matt/info655-assignment2/src/Playlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport './App.css';\nimport shuffleButton from '/Users/matt/info655-assignment2/src/shuffleButton.png';\nimport backButton from '/Users/matt/info655-assignment2/src/backButton.png';\nimport playButton from '/Users/matt/info655-assignment2/src/playButton.png';\nimport forwardButton from '/Users/matt/info655-assignment2/src/nextButton.png';\n\nconst Playlist = () => {\n  \n  const [playlist, setPlaylist] = useState([]);\n\n  const getSongs = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"http://localhost:3001/tracks\");\n    xhr.send();\n    xhr.responseType = \"json\";\n    xhr.onload = () => {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        const data = xhr.response;\n        setPlaylist(data);\n      } else {\n        console.log(`Error: ${xhr.status}`);\n      }\n    };\n  };\n\n  useEffect (getSongs, []);\n\n  const shufflePlaylist = () => {\n    let shuffledPlaylist = [...playlist];\n    shuffledPlaylist.sort(() => Math.random() - 0.5);\n  setPlaylist(shuffledPlaylist);\n  };\n\n  let nowPlayingIndex = 0;\n\nconst [nowPlaying, setNowPlaying] = useState('');\n\nconst handleDoubleClick = (title, episodeTitle) => {\n  if (title) {\n    setNowPlaying(`Now Playing: ${title}`);\n  } else if (episodeTitle) {\n    setNowPlaying(`Now Playing: ${episodeTitle}`);\n  }\n};\n\nconst nextSong = () => {\n  if (nowPlayingIndex < playlist.length - 1) {\n    nowPlayingIndex += 1;\n    setNowPlaying(`Now Playing: ${playlist[nowPlayingIndex].title}`);\n  }\n};\n\nconst backSong = () => {\n  if (nowPlayingIndex > 0) {\n    nowPlayingIndex -= 1;\n    setNowPlaying(`Now Playing: ${playlist[nowPlayingIndex].title}`);\n  }\n};\n  \n   return (\n      <div>\n        <div className=\"toolbar\">\n          <button onClick={shufflePlaylist}>\n            <img className=\"shuffle\" src={shuffleButton} />\n          </button>\n  \n          <button onClick={backSong}>\n            <img className=\"previous\" src={backButton} />\n          </button>\n  \n          <button>\n            <img className=\"play\" src={playButton} />\n          </button>\n  \n          <button onClick={nextSong}>\n            <img className=\"next\" src={forwardButton} />\n          </button>\n        </div>\n  \n        <div className=\"status\">\n          {nowPlaying}\n        </div>\n  \n        {playlist.map((item, index) => {\n  if ('artist' in item) {\n    return <Song key={index} {...item} onDoubleClick={() => handleDoubleClick(item.title, null)} />;\n    } else {\n    return <Podcast key={index} {...item} onDoubleClick={() => handleDoubleClick(null, item.episodeTitle)} />;\n    }\n      })}\n      </div>\n    );\n  };\n\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}